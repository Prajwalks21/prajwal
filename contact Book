import tkinter as tk

class ContactBook:
    def __init__(self, root):
        self.root = root
        self.root.title("Simple Contact Book")
        self.root.geometry("500x350")
        self.contacts = []

        tk.Label(root, text="Simple Contact Book", font=("Arial", 18, "bold")).pack(pady=10)

        frame = tk.Frame(root)
        frame.pack(pady=5)

        tk.Label(frame, text="Name:").grid(row=0, column=0, sticky='w')
        self.name_entry = tk.Entry(frame, width=30)
        self.name_entry.grid(row=0, column=1)

        tk.Label(frame, text="Phone:").grid(row=1, column=0, sticky='w')
        self.phone_entry = tk.Entry(frame, width=30)
        self.phone_entry.grid(row=1, column=1)

        btn_frame = tk.Frame(root)
        btn_frame.pack(pady=10)

        tk.Button(btn_frame, text="Add", width=10, command=self.add_contact).grid(row=0, column=0, padx=5)
        tk.Button(btn_frame, text="Clear", width=10, command=self.clear_fields).grid(row=0, column=1, padx=5)

        self.contact_listbox = tk.Listbox(root, width=50, height=10)
        self.contact_listbox.pack(pady=10)

    def display_format(self, contact):
        return f"{contact['name']} - {contact['phone']}"

    def add_contact(self):
        name = self.name_entry.get().strip()
        phone = self.phone_entry.get().strip()

        if not name or not phone:
            print("Name and Phone are required.")
            return

        contact = {"name": name, "phone": phone}
        self.contacts.append(contact)
        print(f"Added: {name} - {phone}")
        self.refresh_listbox()
        self.clear_fields()

    def clear_fields(self):
        self.name_entry.delete(0, tk.END)
        self.phone_entry.delete(0, tk.END)

    def refresh_listbox(self):
        self.contact_listbox.delete(0, tk.END)
        if not self.contacts:
            self.contact_listbox.insert(tk.END, "No contacts available.")
        else:
            for contact in self.contacts:
                self.contact_listbox.insert(tk.END, self.display_format(contact))


if __name__ == "__main__":
    root = tk.Tk()
    app = ContactBook(root)
    root.mainloop()
